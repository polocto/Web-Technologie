#!/usr/bin/env node

const axios = require('axios')
const app = require('../lib/app')
const db = require('../lib/db/db')
const config = {
  port: 3001
};

let users = [{
  username: "polocto",
  email: process.env.TEST_PAYLOAD_EMAIL,
  lastName: "Sade",
  firstName: "Paul"
},{
  username: "mathisCAMARD",
  email: "mathis.camard@edu.ece.fr",
  lastName: "Camard",
  firstName: "Mathis"
},{
  username: "aliceCbx",
  email: "alice.combernoux@edu.ece.fr",
  lastName: "Combernoux",
  firstName: "Alice"
},{
  username: "snow",
  email: "neige.jumeau@edu.ece.fr",
  lastName: "Jumeau",
  firstName: "Neige"
},{
  username: "clemoctohub",
  email: "clement.fages@edu.ece.fr",
  lastName: "Fages",
  firstName: "Clément"
},
];

let channels = [
  {
    name: "Channel 1",
    profileImage: "../img/lol.png",
    users: []
  },
  {
    name: "Channel 2",
    profileImage: "../img/lol.png",
    users: []
  }
];

(async function() {
  await db.admin.clear();
  app.listen(config.port);

  try
  {
    users = await Promise.all(users.map((async u => {
        const {data:user} = await axios.post(`http://localhost:${config.port}/users`, u);
        return new Promise((resolve,reject)=>{
          resolve(user);
        });
    })));
    channels[0].users.push(users[0].id); 
    channels[0].users.push(users[1].id);
    users.map(user => {
      channels[1].users.push(user.id);
    });

    channels.map(channel => {
      console.log(channel);
    })
    
    //Paul send invitation to Mathis
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[1].id}`,{...users[0]});
    //Mathis accept invitation of Paul
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[0].id}`,{...users[1]});
    //Paul send an invitation to Alice
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[2].id}`,{...users[0]});
    //Neige send an invitation to Paul
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[1].id}`,{...users[3]});
    //Neige send an invitation to Clément
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[4].id}`,{...users[3]});
    //Clément accept an invitation to Neige
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[3].id}`,{...users[4]});
    ////
    //Alice send an invitation to Clément
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[4].id}`,{...users[2]});
    //Clément accept an invitation to Alice
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[2].id}`,{...users[4]});
    //////
    //Mathis send an invitation to Clément
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[4].id}`,{...users[1]});
    //Clément accept an invitation to Mathis
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[1].id}`,{...users[4]});
    //////
    //Paul send an invitation to Clément
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[4].id}`,{...users[0]});
    //Clément accept an invitation to Paul
      await axios.post(`http://localhost:${config.port}/users/contacts/${users[0].id}`,{...users[4]});
      //update users
      
      //Paul creates a channel with Mathis
      await axios.post(`http://localhost:${config.port}/channels`,[channels[0],users[0]]);
      //Clément create a channel whith everyone
      await axios.post(`http://localhost:${config.port}/channels`,[channels[1],users[4]]);
      
      users = await Promise.all(users.map((async u => {
        const {data:user} = await axios.get(`http://localhost:${config.port}/users/${u.id}`);
        return new Promise((resolve,reject)=>{
          resolve(user);
        });
      })));
      users.map(user=>{
        console.log(user);
      })
      
    {
       const {data: channel} = await axios({
        method: "get",
        url: `http://localhost:${config.port}/channels/${users[0].channels[0]}`,
        body: users[0]
      });
      channels[0] = channel;
    }
    {
      const {data: channel} = await axios.get(`http://localhost:${config.port}/channels/${users[0].channels[1]}`,users[0]);
      channels[1] = channel;
    }

    channels.map(channel=>{
      console.log(channel);
    })
  }
  catch(err){
    console.log(err)
  }

  process.exit()
})();
